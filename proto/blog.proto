syntax = "proto3";

service BlogService {
    rpc CreateBlog (CreateBlogRequest) returns (BlogResponse);
    rpc GetBlog (GetBlogRequest) returns (BlogResponse);
    rpc GetAllBlogs (GetAllBlogsRequest) returns (GetAllBlogsResponse);
    rpc UpdateBlog (UpdateBlogRequest) returns (BlogResponse);
    rpc DeleteBlog (DeleteBlogRequest) returns (DeleteBlogResponse);
    rpc LikeBlog (LikeDislikeRequest) returns (BlogResponse);
    rpc DislikeBlog (LikeDislikeRequest) returns (BlogResponse);
    rpc GetAnalytics (Empty) returns (AnalyticsResponse);
}

// Request messages
message CreateBlogRequest {
    string title = 1;
    string content = 2;
    string author = 3;
}

message UpdateBlogRequest {
    string blogId = 1;
    string title = 2;
    string content = 3;
    string author = 4;
}

message GetBlogRequest {
    string blogId = 1;
}

message DeleteBlogRequest {
    string blogId = 1;
}

message LikeDislikeRequest {
    string blogId = 1;
}

// Pagination & filtering request for blogs
message GetAllBlogsRequest {
    int32 page = 1;
    int32 pageSize = 2;
    string filter = 3; // Optional: "liked", "disliked", or empty for all
}

// Response for a blog-related operation
message BlogResponse {
    string blogId = 1;
    string title = 2;
    string content = 3;
    string author = 4;
    int32 likes = 5;
    int32 dislikes = 6;
}

// Response for retrieving blogs
message GetAllBlogsResponse {
    repeated BlogResponse blogs = 1;
    int32 totalBlogs = 2;
    int32 totalPages = 3;
}

// Analytics
message AnalyticsResponse {
    int32 totalUsers = 1;
    int32 totalBlogs = 2;
}

message DeleteBlogResponse {
    bool success = 1;
    string message = 2;
}

message Empty {}
