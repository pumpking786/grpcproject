syntax = "proto3";

service BlogService {
    // Create a new blog post
    rpc CreateBlog (CreateBlogRequest) returns (BlogResponse);

    // Get a blog post by ID
    rpc GetBlog (GetBlogRequest) returns (BlogResponse);

    // Get all blog posts
    rpc GetAllBlogs (Empty) returns (GetAllBlogsResponse);

    // Update an existing blog post
    rpc UpdateBlog (UpdateBlogRequest) returns (BlogResponse);

    // Delete a blog post
    rpc DeleteBlog (DeleteBlogRequest) returns (DeleteBlogResponse);

    // Like a blog post
    rpc LikeBlog (LikeDislikeRequest) returns (BlogResponse);

    // Dislike a blog post
    rpc DislikeBlog (LikeDislikeRequest) returns (BlogResponse);
}

// Request for creating a new blog post
message CreateBlogRequest {
    string title = 1;
    string content = 2;
    string author = 3;
}

// Request to update an existing blog post
message UpdateBlogRequest {
    string blogId = 1;  // Required to identify the blog to update
    string title = 2;
    string content = 3;
    string author = 4;
    int32 likes = 5;    // Optional: Update the number of likes
    int32 dislikes = 6; // Optional: Update the number of dislikes
}

// Request to get a blog post by ID
message GetBlogRequest {
    string blogId = 1;  // Required to retrieve a blog by ID
}

// Request to delete a blog post
message DeleteBlogRequest {
    string blogId = 1;  // Required to delete a specific blog by ID
}

// Request to like or dislike a blog post
message LikeDislikeRequest {
    string blogId = 1;  // Required to identify the blog to like or dislike
}

// Response for a blog-related operation (create, update, get)
message BlogResponse {
    string blogId = 1;
    string title = 2;
    string content = 3;
    string author = 4;
    int32 likes = 5;   // Number of likes
    int32 dislikes = 6; // Number of dislikes
}

// Response for retrieving all blogs
message GetAllBlogsResponse {
    repeated BlogResponse blogs = 1;  // List of blog posts
}

// Response for deleting a blog post
message DeleteBlogResponse {
    bool success = 1;    // Indicates whether the deletion was successful
    string message = 2;  // A message like "Blog deleted successfully"
}

// Empty message for requests that don't need any input data
message Empty {}
